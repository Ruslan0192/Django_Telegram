version: '3.8'

services:

  bot:
    build: ./bot
    command: python bot/main.py

    env_file:
      - bot/.env_bot

    volumes:
      - .:/bot
    depends_on:
      - db

  app:
    build: .
    command: python manage.py runserver 0.0.0.0:8000

    volumes:
      - .:/app
    ports:
      - 8000:8000
    depends_on:
      - db

  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/posgresql/data/
#    environment:
#      POSTGRES_USER: POSTGRES_USER
#      POSTGRES_PASSWORD: POSTGRES_PASSWORD
#      POSTGRES_DB: POSTGRES_DB
#      POSTGRES_HOST: POSTGRES_HOST
    env_file:
      - .env
    ports:
      - 5432:5432

volumes:
  postgres_data:














#version: '3.8'
#services:
#  db:
#    image: postgres:14
#    env_file:
#      - .env
#    volumes:
#      - pgdata:/var/lib/postgresql/data/
#    ports:
#      - 5432:5432
#    networks:
#      - deploy_network
#
#  app:
#    build: .
#
#    ports:
#      - 8000:8000
#    volumes:
#      - .:/app
##    network_mode: host
#    depends_on:
#      - db
#    command: python manage.py runserver 0.0.0.0:8000
#    networks:
#      - deploy_network
#
#volumes:
#  pgdata:
#
#networks:
#  deploy_network:
#    driver: bridge



#
#services:
#  app:
#    build: .
#    container_name: app
##      context: ./
##      dockerfile: Dockerfile
#    ports:
#      - 8000:8000
#    command: python manage.py runserver 0.0.0.0:8000
#    volumes:
#      - .:/app
#    depends_on:
#      - db
##    network_mode: host
##    networks:
##      - deploy_network
#    env_file:
#      - .env
#
#  db:
#    image: postgres:14
#    container_name: pgdb
#    volumes:
#      - postgres_data:/var/lib/postgresql/data/
#    env_file:
#      - .env
#    ports:
#      - 5432:5432
##    networks:
##      - deploy_network
##    restart: always
#
#volumes:
#  postgres_data:
#
#



#networks:
#  deploy_network:
#    driver: bridge

#services:
#  db:
#    image: postgres:latest
#    volumes:
#      - .:/var/lib/postgresql/data/
#    env_file:
#      - .env
#    ports:
#      - 5433:5433
#    networks:
#      - deploy_network
#    restart: always
#
#  app:
#    build:
#      context: ./
#      dockerfile: Dockerfile
#    image: app:1.0.0
#    ports:
#      - 8000:8000
#    depends_on:
#      - db
#    networks:
#      - deploy_network
#    restart: always
#    env_file:
#      - .env
#    command: python manage.py runserver 0.0.0.0:8000
#
#volumes:
#  pgdata:
#
#networks:
#  deploy_network:
#    driver: bridge
